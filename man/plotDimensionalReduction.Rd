% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R,
%   R/plotDimensionalReduction-methods.R
\docType{methods}
\name{plotTSNE}
\alias{plotTSNE}
\alias{plotUMAP}
\alias{plotDimensionalReduction}
\alias{plotTSNE,SingleCellExperiment-method}
\alias{plotTSNE,seurat-method}
\alias{plotUMAP,SingleCellExperiment-method}
\alias{plotUMAP,seurat-method}
\alias{plotPCA,SingleCellExperiment-method}
\alias{plotPCA,seurat-method}
\title{Plot Dimensional Reduction}
\usage{
plotTSNE(object, ...)

plotUMAP(object, ...)

\S4method{plotTSNE}{SingleCellExperiment}(object, interestingGroups = "ident",
  color = NULL, pointsAsNumbers = FALSE,
  pointSize = getOption("pointSize", 0.75),
  pointAlpha = getOption("pointAlpha", 0.75), label = TRUE,
  labelSize = getOption("labelSize", 6L), dark = FALSE, grid = FALSE,
  legend = TRUE, aspectRatio = 1L, title = NULL)

\S4method{plotTSNE}{seurat}(object, interestingGroups = "ident",
  color = NULL, pointsAsNumbers = FALSE,
  pointSize = getOption("pointSize", 0.75),
  pointAlpha = getOption("pointAlpha", 0.75), label = TRUE,
  labelSize = getOption("labelSize", 6L), dark = FALSE, grid = FALSE,
  legend = TRUE, aspectRatio = 1L, title = NULL)

\S4method{plotUMAP}{SingleCellExperiment}(object, interestingGroups = "ident",
  color = NULL, pointsAsNumbers = FALSE,
  pointSize = getOption("pointSize", 0.75),
  pointAlpha = getOption("pointAlpha", 0.75), label = TRUE,
  labelSize = getOption("labelSize", 6L), dark = FALSE, grid = FALSE,
  legend = TRUE, aspectRatio = 1L, title = NULL)

\S4method{plotUMAP}{seurat}(object, interestingGroups = "ident",
  color = NULL, pointsAsNumbers = FALSE,
  pointSize = getOption("pointSize", 0.75),
  pointAlpha = getOption("pointAlpha", 0.75), label = TRUE,
  labelSize = getOption("labelSize", 6L), dark = FALSE, grid = FALSE,
  legend = TRUE, aspectRatio = 1L, title = NULL)

\S4method{plotPCA}{SingleCellExperiment}(object, interestingGroups = "ident",
  color = NULL, pointsAsNumbers = FALSE,
  pointSize = getOption("pointSize", 0.75),
  pointAlpha = getOption("pointAlpha", 0.75), label = TRUE,
  labelSize = getOption("labelSize", 6L), dark = FALSE, grid = FALSE,
  legend = TRUE, aspectRatio = 1L, title = NULL)

\S4method{plotPCA}{seurat}(object, interestingGroups = "ident",
  color = NULL, pointsAsNumbers = FALSE,
  pointSize = getOption("pointSize", 0.75),
  pointAlpha = getOption("pointAlpha", 0.75), label = TRUE,
  labelSize = getOption("labelSize", 6L), dark = FALSE, grid = FALSE,
  legend = TRUE, aspectRatio = 1L, title = NULL)
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{interestingGroups}{Character vector of interesting groups. Must be
formatted in camel case and intersect with \code{\link[=sampleData]{sampleData()}} colnames.}

\item{color}{Desired ggplot color scale. Must supply discrete values. When
set to \code{NULL}, the default ggplot2 color palette will be used. If manual
color definitions are desired, we recommend using
\code{\link[ggplot2:scale_color_manual]{ggplot2::scale_color_manual()}}.}

\item{pointsAsNumbers}{Plot the points as numbers (\code{TRUE}) or dots (\code{FALSE}).}

\item{pointSize}{Cell point size.}

\item{pointAlpha}{Alpha transparency level. Useful when there many cells in
the dataset, and some cells can be masked.}

\item{label}{Overlay a cluster identitiy label on the plot.}

\item{labelSize}{Size of the text label.}

\item{dark}{Plot against a dark background using
\code{\link[basejump:theme_midnight]{basejump::theme_midnight()}}.}

\item{grid}{Show major grid lines but hide axis lines.}

\item{legend}{Include plot legend.}

\item{aspectRatio}{Aspect ratio.}

\item{title}{Plot title.}
}
\value{
\code{ggplot}.
}
\description{
\itemize{
\item t-SNE: \strong{t}-distributed \strong{S}tochastic \strong{N}eighbor \strong{E}mbedding.
\item PCA: \strong{P}rincipal \strong{C}omponent \strong{A}nalysis.
\item UMAP: \strong{U}niform \strong{M}anifold \strong{A}pproximation and \strong{P}rojection.
}
}
\note{
\code{\link[=plotUMAP]{plotUMAP()}} requires the Python dependency \code{umap-learn}. We recommend
installing this with conda: \code{conda install -c conda-forge umap-learn}.
}
\examples{
# seurat ====
object <- seurat_small

# t-SNE
plotTSNE(object)
plotTSNE(object, pointsAsNumbers = TRUE)
plotTSNE(object, dark = TRUE)

# UMAP
plotUMAP(object)

# PCA
plotPCA(object)
}
\seealso{
\itemize{
\item \code{\link[Seurat:DimPlot]{Seurat::DimPlot()}}.
\item \href{https://github.com/lmcinnes/umap}{UMAP GitHub repo}.
\item \href{https://satijalab.org/seurat/mca.html}{Seurat Mouse Cell Atlas vignette}.
}

Other Clustering Functions: \code{\link{cellTypesPerCluster}},
  \code{\link{knownMarkersDetected}},
  \code{\link{plotCellTypesPerCluster}},
  \code{\link{plotFeatureTSNE}},
  \code{\link{plotKnownMarkersDetected}},
  \code{\link{plotPCElbow}}, \code{\link{sanitizeMarkers}},
  \code{\link{topMarkers}}
}
\author{
Michael Steinbaugh, Rory Kirchner
}
